{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst selector = document.querySelector(\"#datetime-picker\");\nconst startBtn = document.querySelector(\"button[data-start]\")\nconst time = {\n    days : document.querySelector(\"span[data-days]\"),\n    hours : document.querySelector(\"span[data-hours]\"),\n    minutes : document.querySelector(\"span[data-minutes]\"),\n    seconds : document.querySelector(\"span[data-seconds]\")\n    };\nstartBtn.setAttribute(\"disabled\", true);\n\n\n    const options = {\n      enableTime: true,\n      time_24hr: true,\n      defaultDate: new Date(),\n      minuteIncrement: 1,\n      onClose(selectedDates) {\n\n        let currentDate = new Date().getTime();\n        const finalDate = selectedDates[0].getTime();\n    \n        if (finalDate < currentDate) {\n          window.alert(\"Please choose a date in the future\");\n        } \n\n        else {\n          startBtn.removeAttribute(\"disabled\");\n          startBtn.addEventListener(\"click\", startCount);\n\n          function startCount() {\n            const timerId = setInterval(() => {\n              let currentDate = new Date().getTime();\n              let timeDifference = finalDate - currentDate;\n              let finalDateLeft = convertMs(timeDifference)\n              time.days.textContent = addLeadingZero(finalDateLeft.days);\n              time.hours.textContent = addLeadingZero(finalDateLeft.hours);\n              time.minutes.textContent = addLeadingZero(finalDateLeft.minutes);\n              time.seconds.textContent = addLeadingZero(finalDateLeft.seconds);\n              if (timeDifference < 1000) {\n                clearInterval(timerId);\n              }\n            }, 1000);\n          }\n        }\n      }\n    };\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n    \nflatpickr(selector, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["selector","startBtn","time","options","selectedDates","currentDate","finalDate","startCount","timerId","timeDifference","finalDateLeft","convertMs","addLeadingZero","value","flatpickr","ms","days","hours","minutes","seconds"],"mappings":"wIAGA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAO,CACT,KAAO,SAAS,cAAc,iBAAiB,EAC/C,MAAQ,SAAS,cAAc,kBAAkB,EACjD,QAAU,SAAS,cAAc,oBAAoB,EACrD,QAAU,SAAS,cAAc,oBAAoB,CACzD,EACAD,EAAS,aAAa,WAAY,EAAI,EAGlC,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErB,IAAIC,EAAc,IAAI,KAAM,EAAC,QAAO,EACpC,MAAMC,EAAYF,EAAc,GAAG,QAAO,EAE1C,GAAIE,EAAYD,EACd,OAAO,MAAM,oCAAoC,MAG9C,CAIH,IAASE,EAAT,UAAsB,CACpB,MAAMC,EAAU,YAAY,IAAM,CAChC,IAAIH,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCI,EAAiBH,EAAYD,EAC7BK,EAAgBC,EAAUF,CAAc,EAC5CP,EAAK,KAAK,YAAcU,EAAeF,EAAc,IAAI,EACzDR,EAAK,MAAM,YAAcU,EAAeF,EAAc,KAAK,EAC3DR,EAAK,QAAQ,YAAcU,EAAeF,EAAc,OAAO,EAC/DR,EAAK,QAAQ,YAAcU,EAAeF,EAAc,OAAO,EAC3DD,EAAiB,KACnB,cAAcD,CAAO,CAExB,EAAE,GAAI,CACR,EAhBDP,EAAS,gBAAgB,UAAU,EACnCA,EAAS,iBAAiB,QAASM,CAAU,CAgB9C,CACF,CACP,EAEA,SAASK,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEAC,EAAUd,EAAUG,CAAO,EAE3B,SAASQ,EAAUI,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}